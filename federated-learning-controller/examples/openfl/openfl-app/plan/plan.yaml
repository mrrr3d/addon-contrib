aggregator:
  settings:
    best_state_path: model/best.pbuf
    db_store_rounds: 2
    init_state_path: save/init.pbuf
    last_state_path: model/last.pbuf
    persist_checkpoint: true
    persistent_db_path: local_state/tensor.db
    rounds_to_train: 10
  template: openfl.component.Aggregator
assigner:
  settings:
    task_groups:
    - name: learning
      percentage: 1.0
      tasks:
      - aggregated_model_validation
      - train
      - locally_tuned_model_validation
    - name: evaluation
      percentage: 0
      tasks:
      - aggregated_model_validation
  template: openfl.component.RandomGroupedAssigner
collaborator:
  settings:
    db_store_rounds: 1
    opt_treatment: RESET
    use_delta_updates: false
  template: openfl.component.Collaborator
compression_pipeline:
  settings: {}
  template: openfl.pipelines.NoCompressionPipeline
data_loader:
  settings:
    batch_size: 256
    collaborator_count: 2
    data_group_name: mnist
  template: src.dataloader.KerasMNISTInMemory
network:
  settings:
    agg_addr: 172.16.1.11
    agg_port: 58112
    cert_folder: cert
    client_reconnect_interval: 5
    enable_atomic_connections: false
    hash_salt: auto
    require_client_auth: true
    transport_protocol: grpc
    use_tls: false
  template: openfl.federation.Network
task_runner:
  settings: {}
  template: src.taskrunner.KerasCNN
tasks:
  aggregated_model_validation:
    function: validate_task
    kwargs:
      apply: global
      batch_size: 32
      metrics:
      - accuracy
  locally_tuned_model_validation:
    function: validate_task
    kwargs:
      apply: local
      batch_size: 32
      metrics:
      - accuracy
  settings: {}
  train:
    function: train_task
    kwargs:
      batch_size: 32
      epochs: 1
      metrics:
      - loss
